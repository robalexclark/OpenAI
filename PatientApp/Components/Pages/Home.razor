@page "/"

@using System.Linq
@using Blazorise

<PageTitle>Patients</PageTitle>

@if (!patients.Any())
{
    <Alert Color="Color.Info">No patients available.</Alert>
}
else if (patients.All(p => p.Pill != Pill.None))
{
    <Alert Color="Color.Info">All patients already have pills.</Alert>
}
<Button Color="Color.Secondary" Size="Size.Small" Clicked="@ResetData">Reset Data</Button>

<DataGrid TItem="Patient" Data="@patients" Sortable="true">
    <DataGridColumns>
        <DataGridColumn TItem="Patient" Field="@nameof(Patient.Initials)" Caption="Initials" />
        <DataGridColumn TItem="Patient" Field="@nameof(Patient.DateOfBirth)" Caption="Date of Birth" />
        <DataGridColumn TItem="Patient" Field="@nameof(Patient.AddedAt)" Caption="Added At" />
        <DataGridColumn TItem="Patient" Field="@nameof(Patient.Pill)" Caption="Pill" />
        <DataGridColumn TItem="Patient" Field="@nameof(Patient.AllocatedAt)" Caption="Allocated At" />
        <DataGridColumn TItem="Patient" Caption="">
            <DisplayTemplate Context="patient">
                @if (patient.Pill == Pill.None)
                {
                    <Tooltip Text="Randomise">
                        <Button Color="Color.Primary" Size="Size.Small" Disabled="@IsRandomisationComplete" Clicked="@(() => OpenRandomiseModal(patient))">
                            <Icon Name="IconName.Random" />
                        </Button>
                    </Tooltip>
                }
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
</DataGrid>

<Modal @ref="randomiseModal">
    <ModalContent>
        <ModalHeader>Randomise Patient</ModalHeader>
        <ModalBody>
            <TextEdit @bind-Text="modalInitials" MaxLength="10" />
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Primary" Disabled="@(!IsInitialsValid)" Clicked="@ConfirmRandomise">Confirm</Button>
            <Button Color="Color.Secondary" Clicked="@CancelRandomise">Cancel</Button>
        </ModalFooter>
    </ModalContent>
</Modal>
